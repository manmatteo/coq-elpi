
coverage:
	@printf "====== %-10s\n" "test suite"
	@printf "inductives: %d\n" \
		`grep -E "^ *(Inductive|Variant)" tests/test_derive_stdlib.v 2>/dev/null| wc -l`
	@printf "records: %d\n" \
		`grep -E "^ *(Record|Structure)" tests/test_derive_stdlib.v 2>/dev/null| wc -l`
	@printf "definitions: %d\n" \
		`grep -E "^ *(Fixpoint|Definition)" tests/test_derive_stdlib.v 2>/dev/null| wc -l`
	@for F in $(wildcard theories/derive/*.v); do\
		D=`basename $$F .v`;\
		D_=`echo $$D | sed 's/_/./'`;\
		F=`mktemp`;\
		if [ -e tests/test_$${D}.v ]; then\
		  (cat tests/test_$${D}.v | awk ' /Module Coverage/ { p = 1 } /End Coverage/ { p = 0 } { if(p == 1) { print }} ' ) > $$F ;\
		  N=`grep -E "^(Fail )?Elpi derive.$$D_" $$F 2>/dev/null| wc -l`;\
		  OK=`grep -E "^Elpi derive.$$D_" $$F 2>/dev/null| wc -l`;\
		  printf "====== %-10s (%2d/%-2d)\n" tests/test_$${D}.v $$OK $$N;\
		  grep -E "^Fail Elpi derive.$$D_" $$F | grep -vi expected 2>/dev/null;\
		fi;\
	done || true

